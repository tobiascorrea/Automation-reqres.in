name: Robot Framework API Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['main']

jobs:
  robot-tests:
    runs-on: ubuntu-latest
    env:
      ENV: dev                 # usado pelos testes Robot
      PROJECT_KEY: SCRUM       # Jira Project Key (Zephyr Squad usa a mesma)

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preparar .env (somente para os testes)
        shell: bash
        run: |
          if [ -f ".env.example" ]; then
            cp .env.example .env
            echo "Usando .env a partir de .env.example"
          else
            echo "ENV=dev" > .env
            echo "Criado .env mínimo (sem .env.example)"
          fi

      - name: Executar testes Robot Framework (gera JUnit)
        run: |
          mkdir -p reports
          robot -d reports -x junit.xml tests/api

      - name: Garantir junit.xml (converte output.xml se necessário)
        run: |
          if [ ! -f "reports/junit.xml" ] && [ -f "reports/output.xml" ]; then
            echo "Gerando junit.xml a partir de reports/output.xml..."
            rebot --xunit reports/junit.xml --output NONE reports/output.xml
          fi
          echo "Conteúdo da pasta reports:"
          ls -la reports || true

      # Upload para Zephyr Squad (Cloud)
      - name: Upload JUnit para Zephyr Squad
        if: ${{ always() && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)) }}
        continue-on-error: true
        env:
          ZEPHYR_TOKEN: ${{ secrets.ZEPHYR_TOKEN }}   # token do Zephyr Squad (user access token)
          PROJECT_KEY: ${{ env.PROJECT_KEY }}
        shell: bash
        run: |
          if [ -z "${ZEPHYR_TOKEN:-}" ]; then
            echo "ZEPHYR_TOKEN indisponível (provável PR de fork). Pulando upload."
            exit 0
          fi
          if [ ! -f "reports/junit.xml" ]; then
            echo "reports/junit.xml não encontrado. Pulando upload."
            exit 0
          fi

          echo "Enviando junit.xml para Zephyr Squad (projectKey=${PROJECT_KEY})..."
          HTTP_CODE=$(curl -sS -o response.json -w "%{http_code}" -X POST \
            -H "Authorization: Bearer ${ZEPHYR_TOKEN}" \
            -F "file=@reports/junit.xml;type=application/xml" \
            "https://prod-api.zephyr4jiracloud.com/v2/automations/executions/junit?projectKey=${PROJECT_KEY}&autoCreateTestCases=false")
          echo "HTTP: $HTTP_CODE"
          echo "Resposta:"
          cat response.json || true

      - name: Publicar Relatórios Robot Framework (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports
          path: reports/
